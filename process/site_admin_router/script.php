<?php
$profile_Script = '';
$profile_Script .= ':global datetime';
$profile_Script .= ';:global expiredatetime';
$profile_Script .= ';:local shiftDay ' . $datelimit . '';
$profile_Script .= ';:local shiftDate [ :parse [ /system script get func_shiftDate source ] ] ';
$profile_Script .= ';:local montharray ( "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec" ) ';
$profile_Script .= ';:local date [ /system clock get date ] ';
$profile_Script .= ';:local date [ $shiftDate date=$date days=$shiftDay ] ';
$profile_Script .= ';:local day [ :pick $date 4 6 ] ';
$profile_Script .= ';:set day ($day) ';
$profile_Script .= ';:local monthtext [ :pick $date 0 3 ] ';
$profile_Script .= ';:local month ( [ :find $montharray $monthtext ] + 1) ';
$profile_Script .= ';:local year [ :pick $date 7 11 ] ';
$profile_Script .= ';:if ($month < 10) do={:set month ("0" . $month);}; ';
$profile_Script .= ';:local timetext [ /system clock get time ] ';
$profile_Script .= ';:local hour [ :pick $timetext 0 2 ] ';
$profile_Script .= ';:local minute [ pick $timetext 3 5 ] ';
$profile_Script .= ';:local second [ pick $timetext 6 8 ] ';
$profile_Script .= ';:set datetime ( $year . $month . $day . $time . $hour . $minute . $second ) ';
$profile_Script .= ';:set expiredatetime ( $year . "-" . $month . "-" . $day . " " . $hour . ":" . $minute . ":" . $second ) ';
$profile_Script .= ';:local i [ /ip hotspot user find name=$user] ';
$profile_Script .= ';:local usercomment [ /ip hotspot user get $i comment ] ';
$profile_Script .= ';:if ( [ :find $usercomment "expire" ] != 0 ) do={[ /ip hotspot user set $i comment=("expire=".$expiredatetime) ]}';

$func_shiftDate = '';
$func_shiftDate .= ':local mdays  {31;28;31;30;31;30;31;31;30;31;30;31} ';
$func_shiftDate .= ';:local months {"jan"=1;"feb"=2;"mar"=3;"apr"=4;"may"=5;"jun"=6;"jul"=7;"aug"=8;"sep"=9;"oct"=10;"nov"=11;"dec"=12} ';
$func_shiftDate .= ';:local monthr  {"jan";"feb";"mar";"apr";"may";"jun";"jul";"aug";"sep";"oct";"nov";"dec"} ';
$func_shiftDate .= ';:local dd  [:tonum [:pick $date 4 6]] ';
$func_shiftDate .= ';:local yy [:tonum [:pick $date 7 11]] ';
$func_shiftDate .= ';:local month [:pick $date 0 3] ';
$func_shiftDate .= ';:local mm (:$months->$month) ';
$func_shiftDate .= ';:set dd ($dd+$days) ';
$func_shiftDate .= ';:local dm [:pick $mdays ($mm-1)] ';
$func_shiftDate .= ';:if ($mm=2 && (($yy&3=0 && ($yy/100*100 != $yy)) || $yy/400*400=$yy) ) do={ :set dm 29 } ';
$func_shiftDate .= ';:while ($dd>$dm) do={ ';
$func_shiftDate .= ';:set dd ($dd-$dm) ';
$func_shiftDate .= ';:set mm ($mm+1) ';
$func_shiftDate .= ';:if ($mm>12) do={ ';
$func_shiftDate .= ';:set mm 1 ';
$func_shiftDate .= ';:set yy ($yy+1)} ';
$func_shiftDate .= ';:set dm [:pick $mdays ($mm-1)] ';
$func_shiftDate .= ';:if ($mm=2 &&  (($yy&3=0 && ($yy/100*100 != $yy)) || $yy/400*400=$yy) ) do={ :set dm 29 }} ';
$func_shiftDate .= ';:local res "$[:pick $monthr ($mm-1)]/" ';
$func_shiftDate .= ';:if ($dd<10) do={ :set res ($res."0") } ';
$func_shiftDate .= ';:set $res "$res$dd/$yy" ';
$func_shiftDate .= ';:return $res }';

$auto_Cutoff = '';
$auto_Cutoff .= ':global datetime '; 
$auto_Cutoff .= ';:global expiredate '; 
$auto_Cutoff .= ';:global datenum '; 
$auto_Cutoff .= ';:global expirenum '; 
$auto_Cutoff .= ';:local montharray ( "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec" ) '; 
$auto_Cutoff .= ';:local date [ /system clock get date ] '; 
$auto_Cutoff .= ';:local day [ :pick $date 4 6 ] '; 
$auto_Cutoff .= ';:local monthtext [ :pick $date 0 3 ] '; 
$auto_Cutoff .= ';:local month ( [ :find $montharray $monthtext ] + 1) '; 
$auto_Cutoff .= ';:local year [ :pick $date 7 11 ] '; 
$auto_Cutoff .= ';:if ($month < 10) do={:set month ("0" . $month);}; '; 
$auto_Cutoff .= ';:local timetext [ /system clock get time ] '; 
$auto_Cutoff .= ';:local hour [ :pick $timetext 0 2 ] '; 
$auto_Cutoff .= ';:local minute [ pick $timetext 3 5 ] '; 
$auto_Cutoff .= ';:local second [ pick $timetext 6 8 ] '; 
$auto_Cutoff .= ';:set datetime ( $year . $month . $day . $time . $hour . $minute . $second ) '; 
$auto_Cutoff .= ';:set datenum [ :tonum $datetime ] '; 
$auto_Cutoff .= ';:foreach i in [ /ip hotspot user find where disabled=no ] do={ '; 
$auto_Cutoff .= ';:local usercomment [ /ip hotspot user get $i comment ] '; 
$auto_Cutoff .= ';:local username [ /ip hotspot user get $i name ] '; 
$auto_Cutoff .= ';:if ( [ :find $usercomment "expire" ] = 0 ) do={ '; 
$auto_Cutoff .= ';:local expire [ :pick $usercomment 7 26 ] '; 
$auto_Cutoff .= ';:local expireyear [ :pick $expire 0 4 ] '; 
$auto_Cutoff .= ';:local expiremonth [ :pick $expire 5 7 ] '; 
$auto_Cutoff .= ';:local expireday [ :pick $expire 8 10 ] '; 
$auto_Cutoff .= ';:local expirehour [ :pick $expire 11 13 ] '; 
$auto_Cutoff .= ';:local expireminute [ :pick $expire 14 16 ] '; 
$auto_Cutoff .= ';:local expiresecond [ :pick $expire 17 19 ] '; 
$auto_Cutoff .= ';:set expiredate ( $expireyear . $expiremonth . $expireday . $expirehour . $expireminute . $expiresecond ) '; 
$auto_Cutoff .= ';:set expirenum [ :tonum $expiredate ] '; 
$auto_Cutoff .= ';:if ( $datenum > $expirenum ) do={ '; 
$auto_Cutoff .= ';:log info "HOTSPOT EXPIRE SCRIPT: Disabling Hotspot user $name first logged in $date" '; 
$auto_Cutoff .= ';:local expirecomment ("This user expire @" . $expireyear . "-" . $expiremonth . "-" . $expireday . " " . $expirehour . ":" .$expireminute . ":" . $expiresecond ) '; 
$auto_Cutoff .= ';[ /ip hotspot user disable $i ] ';
$auto_Cutoff .= ';[ /ip hotspot user set $i comment=$expirecomment ] ';
$auto_Cutoff .= ';[ /ip hotspot active remove [ find where user=$username] ] }}}';
